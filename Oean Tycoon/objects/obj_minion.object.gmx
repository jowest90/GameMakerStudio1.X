<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blue_civ</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
As seen on SlasherXGAMES
https://www.youtube.com/watch?v=TN4KyfRBCio
Happy Coding!
    ~ Jean-Pierre Damstra
*/

//randomize the seed
randomize();
var n = irandom(5);//get an integer between 0 and 5

//give this instance a random sprite, movement speed and rotation rate
switch(n)
{
    case 0:
        sprite_index = spr_blue_worker;
        movementSpeed = 3;
        rotationSpeed = 2;
    break;

    case 1:
        sprite_index = spr_blue_uzi;
        movementSpeed = 6;
        rotationSpeed = 4;
    break;
    
    case 2:
        sprite_index = spr_blue_ak;
        movementSpeed = 3;
        rotationSpeed = 3;
    break;
    
    case 3:
        sprite_index = spr_blue_dual;
        movementSpeed = 6;
        rotationSpeed = 5;
    break;
    
    case 4:
        sprite_index = spr_blue_shotgun;
        movementSpeed = 4;
        rotationSpeed = 3;
    break;
    
    default:
        sprite_index = spr_blue_civ;
        movementSpeed = 2;
        rotationSpeed = 2;
}

image_angle = irandom(360);//and random direction
selected = false;//we're not selected yet
selectorAngle = 0;//the selector ring isn't spinning and starts at angle zero
moving = false;//we're not moving
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (selected == true)//when we're selected
{
    selectorAngle +=4;//start spinning the selector ring
}

if (moving == true)//if we're moving
{
    //smoothly ortate towards our destination
    pointdir = point_direction(x, y, xx, yy);
    image_angle += sin(degtorad(pointdir - image_angle)) * rotationSpeed;

    //now move there at the speed initialised
    move_towards_point(xx, yy, movementSpeed);
    
    //make sure we stop when we've arrived
    if (distance_to_point(xx, yy) == 0)
    {
        moving = false;
    }
}
else//if we're not moving
{
    speed = 0;//then we're stopped :P
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//this handles movement
if (selected == true)
{
    if (place_free(mouse_x, mouse_y))//if there are no obstacles at this point
    {
        xx = mouse_x;//get x
        yy = mouse_y;//get y
        
        moving = true;//start moving
        
        instance_create(xx, yy, obj_goto);//create animation
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//this handles the deselection of minions
if (!position_meeting(mouse_x, mouse_y, obj_minion))//if we're not clicking on a minion
{
    selected = false;//then this minion is no longer selected
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!keyboard_check(vk_shift))//if we're not holding down shift
{
    //deselect all minions
    with (obj_minion)
    {
        selected = false;
    }
}

//only select this one
selected = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw selector if we are selected
if (selected == true)
{
    draw_sprite_ext(spr_selector, 0, x, y, 1, 1, selectorAngle, c_white, 0.7);
}

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>22,24</point>
    <point>22,22</point>
  </PhysicsShapePoints>
</object>
